---
import Layout from './Layout.astro';

interface Frontmatter {
  title: string;
  date: string;
  tags?: string[];
  description?: string;
  readingTime?: string;
  author?: {
    name: string;
    avatar?: string;
  };
}

interface Props {
  frontmatter: Frontmatter;
}

const { frontmatter } = Astro.props;

// Format date
const formattedDate = new Date(frontmatter.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Calculate reading time if not provided
const readingTime = frontmatter.readingTime || '5 min read';
---

<Layout title={`${frontmatter.title} | Sambulo Senda`}>
  <article class="min-h-screen">
    {/* Header Banner */}
    <header class="pt-24 md:pt-32 pb-8 md:pb-12 border-b dark:border-gray-800">
      <div class="max-w-4xl mx-auto px-6 md:px-4">
        {frontmatter.tags && (
          <div class="flex flex-wrap gap-2 mb-6 md:mb-8">
            {frontmatter.tags.map((tag: string) => (
              <span class="bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 px-3 py-1 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}

        <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold mb-4 md:mb-6 text-gray-900 dark:text-gray-100">
          {frontmatter.title}
        </h1>

        {frontmatter.description && (
          <p class="text-lg md:text-xl text-gray-600 dark:text-gray-400 mb-6 md:mb-8 max-w-3xl">
            {frontmatter.description}
          </p>
        )}

        <div class="flex flex-wrap items-center gap-4 md:gap-6 text-gray-600 dark:text-gray-400 text-sm md:text-base">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 md:w-5 md:h-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
            </svg>
            <time datetime={frontmatter.date}>{formattedDate}</time>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 md:w-5 md:h-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
            </svg>
            <span>{readingTime}</span>
          </div>
        </div>
      </div>
    </header>

    {/* Content */}
    <div class="max-w-4xl mx-auto px-6 md:px-4 py-10 md:py-16">
      <div class="prose prose-lg dark:prose-invert prose-pre:shadow-lg">
        <slot />
      </div>

      {/* Footer */}
      <footer class="mt-16 pt-8 border-t dark:border-gray-800">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-6">
          <div class="flex items-center gap-4">
            {frontmatter.author?.avatar ? (
              <img 
                src={frontmatter.author.avatar} 
                alt={frontmatter.author.name}
                class="w-12 h-12 rounded-full"
              />
            ) : (
              <div class="w-12 h-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center">
                <span class="text-xl font-bold">{frontmatter.author?.name?.[0] || 'S'}</span>
              </div>
            )}
            <div>
              <div class="font-medium text-gray-900 dark:text-gray-100">
                {frontmatter.author?.name || 'Sambulo Senda'}
              </div>
              <div class="text-sm text-gray-600 dark:text-gray-400">
                React Native Developer
              </div>
            </div>
          </div>

          {/* Share buttons */}
          <div class="flex gap-3">
            <button 
              class="share-twitter p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
              aria-label="Share on Twitter"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
              </svg>
            </button>
            <button 
              class="share-linkedin p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors"
              aria-label="Share on LinkedIn"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </button>
          </div>
        </div>
      </footer>
    </div>
  </article>
</Layout>

<style is:global>
  /* Base Typography */
  .prose {
    max-width: 65ch;
    margin: 0 auto;
  }

  /* Headings */
  .prose h1 {
    font-size: 2.5rem;
    line-height: 1.2;
    font-weight: 700;
    margin-bottom: 1rem;
    color: theme('colors.gray.900');
  }

  .dark .prose h1 {
    color: theme('colors.gray.100');
  }

  .prose h2 {
    font-size: 1.875rem;
    line-height: 1.3;
    font-weight: 700;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    color: theme('colors.gray.900');
  }

  .dark .prose h2 {
    color: theme('colors.gray.100');
  }

  .prose h3 {
    font-size: 1.5rem;
    line-height: 1.375;
    font-weight: 600;
    margin-top: 2.5rem;
    margin-bottom: 1.25rem;
    color: theme('colors.gray.900');
  }

  .dark .prose h3 {
    color: theme('colors.gray.100');
  }

  /* Paragraph and Lists */
  .prose p {
    margin: 1.5rem 0;
    line-height: 1.75;
  }

  .prose ul, .prose ol {
    margin: 1.5rem 0;
    padding-left: 1.5rem;
  }

  .prose li {
    margin: 0.5rem 0;
  }

  /* Links */
  .prose a {
    color: theme('colors.blue.600');
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }

  .dark .prose a {
    color: theme('colors.blue.400');
  }

  .prose a:hover {
    color: theme('colors.blue.800');
  }

  .dark .prose a:hover {
    color: theme('colors.blue.300');
  }

  /* Code Blocks */
  .prose pre {
    background-color: theme('colors.gray.900');
    padding: 1.5rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 2rem 0;
  }

  .dark .prose pre {
    background-color: theme('colors.gray.800');
  }

  .prose code {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
    font-size: 0.875em;
    color: theme('colors.gray.100');
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
  }

  /* Inline code */
  .prose :not(pre) > code {
    background-color: theme('colors.gray.100');
    color: theme('colors.gray.900');
  }

  .dark .prose :not(pre) > code {
    background-color: theme('colors.gray.800');
    color: theme('colors.gray.100');
  }

  /* Blockquotes */
  .prose blockquote {
    border-left: 4px solid theme('colors.gray.200');
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: theme('colors.gray.600');
  }

  .dark .prose blockquote {
    border-left-color: theme('colors.gray.700');
    color: theme('colors.gray.400');
  }

  /* Tables */
  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
  }

  .prose th, .prose td {
    padding: 0.75rem;
    border: 1px solid theme('colors.gray.200');
  }

  .dark .prose th, .dark .prose td {
    border-color: theme('colors.gray.700');
  }

  .prose th {
    background-color: theme('colors.gray.50');
    font-weight: 600;
  }

  .dark .prose th {
    background-color: theme('colors.gray.800');
  }
</style>

<script>
  // Share functionality
  document.addEventListener('astro:page-load', () => {
    const twitterShare = document.querySelector('.share-twitter');
    const linkedinShare = document.querySelector('.share-linkedin');
    
    if (twitterShare) {
      twitterShare.addEventListener('click', () => {
        const url = encodeURIComponent(window.location.href);
        const text = encodeURIComponent(document.title);
        window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}`, '_blank');
      });
    }
    
    if (linkedinShare) {
      linkedinShare.addEventListener('click', () => {
        const url = encodeURIComponent(window.location.href);
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${url}`, '_blank');
      });
    }
  });
</script>